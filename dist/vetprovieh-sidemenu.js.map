{"version":3,"file":"vetprovieh-sidemenu.js","sources":["../../vetprovieh-shared/dist/vetprovieh-shared.js","../lib/vetprovieh-sidemenu.ts"],"sourcesContent":["/**\n * Helper to get and set Attributes on Objects\n */\nclass ObjectHelper {\n    /**\n       * Getting Value from JSON-Object\n       * @param {Indexable} object\n       * @param {string} key\n       * @return {any}\n       */\n    static get(object, key) {\n        try {\n            const attributes = key.split('.');\n            return this._iterateThrough(object, attributes);\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n    /**\n       * Iterating Through Object\n       * @param {Indexable} obj\n       * @param {string[]} attributes\n       * @param {number} depth\n       * @return {any}\n       * @private\n       */\n    static _iterateThrough(obj, attributes, depth = 0) {\n        if (depth < 0)\n            return undefined;\n        while (attributes.length > depth) {\n            const attribute = attributes.shift();\n            if (!obj)\n                throw new Error('Unknown Key');\n            obj = obj[attribute];\n        }\n        return obj;\n    }\n    /**\n       * Setting value for Object\n       * @param {Indexable} object\n       * @param {string} key\n       * @param {any} value\n       */\n    static set(object, key, value) {\n        const attributes = key.split('.');\n        object = this._iterateThrough(object, attributes, 1);\n        const property = attributes[0];\n        object[property] = value;\n    }\n    /**\n       * Object to String\n       * @param {Object} obj\n       * @return {string}\n       */\n    static objectToStringDeep(obj) {\n        if (!obj)\n            return '';\n        return Object.keys(obj).map((k) => {\n            const value = obj[k];\n            if (typeof (value) == 'object') {\n                return ObjectHelper.objectToStringDeep(value);\n            }\n            else {\n                return value;\n            }\n        }).toString();\n    }\n}\n\n/**\n * Helpers for View\n */\nclass ViewHelper {\n    /**\n       * Mark text yellow inside an element.\n       * @param {Node} element\n       * @param {string} input\n       */\n    static markElement(element, input) {\n        if (input != '') {\n            element.childNodes.forEach((n) => {\n                const value = n.nodeValue || '';\n                if (n.nodeName === '#text' && value.indexOf(input) >= 0) {\n                    element.innerHTML = n['data']\n                        .split(input)\n                        .join('<mark>' + input + '</mark>');\n                }\n                else {\n                    ViewHelper.markElement(n, input);\n                }\n            });\n        }\n    }\n    /**\n       * Regex to fill keys in template\n       * @return {RegExp}\n       */\n    static get regexTemplate() {\n        return /{{([a-zA-Z0-9\\.]+)}}/;\n    }\n    /**\n       * Replacing Placeholders in template from the loaded element\n       * @param {HTMLElement} template\n       * @param {Indexable} e\n       */\n    static replacePlaceholders(template, e) {\n        let match = null;\n        while (match = template.innerHTML.match(ViewHelper.regexTemplate)) {\n            let value = ObjectHelper.get(e, match[1]);\n            value = value || '';\n            template.innerHTML = template.innerHTML.replace(match[0], value);\n        }\n    }\n}\n\n/**\n * Binding for Form Fields\n */\nclass VetproviehBinding {\n    /**\n     * Default Constructor needs object and a property to bind\n     * @param {any} target\n     * @param {target} property\n     */\n    constructor(target, property) {\n        this._targetObject = target;\n        this._targetProperty = property;\n        this._bindings = [];\n    }\n    /**\n     * Gets current property value\n     * @return {any}\n     */\n    get value() {\n        return ObjectHelper.get(this._targetObject, this._targetProperty);\n    }\n    /**\n     * Sets current property value\n     * @param {any} val\n     */\n    set value(val) {\n        if (val !== this.value) {\n            ObjectHelper.set(this._targetObject, this._targetProperty, val);\n            this._updateBindings(val);\n        }\n    }\n    /**\n     * Add Binding to HTML-Field\n     * @param {HTMLElement} element\n     * @param {string} attribute\n     * @param {string} event\n     * @return {VetproviehBinding}\n     */\n    addBinding(element, attribute, event) {\n        this._attachListenerToEvent(element, event, attribute);\n        this._addToBindings(element, attribute);\n        element[attribute] = this.value;\n        return this;\n    }\n    /**\n     * Insert into internal datastructure\n     * @param {HTMLElement} element\n     * @param {string} attribute\n     * @private\n     */\n    _addToBindings(element, attribute) {\n        this._bindings.push({\n            element: element,\n            attribute: attribute,\n        });\n    }\n    /**\n     * Attach EventListener\n     * @param {HTMLElement} element\n     * @param {string} event\n     * @param {string} attribute\n     * @private\n     */\n    _attachListenerToEvent(element, event, attribute) {\n        element.addEventListener(event, () => {\n            this.value = element[attribute];\n        });\n    }\n    /**\n     * Update all set Bindings\n     * @param {any} val\n     * @private\n     */\n    _updateBindings(val) {\n        this._bindings.forEach((binding) => {\n            binding.element[binding.attribute] = val;\n        });\n    }\n}\n\n/**\n * BaseClass for view Elements\n */\nclass VetproviehElement extends HTMLElement {\n    /**\n       * Callback Implementation\n       * @param {string} name\n       * @param {any} old\n       * @param {any} value\n       */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this[name] = value;\n        }\n    }\n    /**\n     * Loading HTML-Element From ShadowRoot\n     * @param {string} id\n     * @return {HTMLElement | undefined}\n     */\n    getByIdFromShadowRoot(id) {\n        if (this.shadowRoot) {\n            return this.shadowRoot.getElementById(id);\n        }\n    }\n    /**\n       * Hide Or Show Element\n       * @param {string} id\n       * @param {boolean} show\n       */\n    updateVisibility(id, show) {\n        const search = this.getByIdFromShadowRoot(id);\n        if (search) {\n            if (!show) {\n                search.classList.add('is-hidden');\n            }\n            else {\n                search.classList.remove('is-hidden');\n            }\n        }\n    }\n    // -----------------\n    // CLASS METHODS\n    // -----------------\n    /**\n       * Getting Template\n       * @return {string}\n       */\n    static get template() {\n        return `<link href=\"../node_modules/bulma/css/bulma.min.css\" \n                  rel=\"stylesheet\" type=\"text/css\">`;\n    }\n}\n\nexport { ObjectHelper, VetproviehBinding, VetproviehElement, ViewHelper };\n//# sourceMappingURL=vetprovieh-shared.js.map\n","import {VetproviehElement} from '@tomuench/vetprovieh-shared';\n\n/**\n * `vetprovieh-sidemenu`\n * Responsive Sidemenu featuring Bulma.css\n *\n * @customElement\n * @demo demo/index.html\n */\nexport class VetproviehSidemenu extends VetproviehElement {\n    private _properties = {\n      width: '300px',\n      orientation: 'left',\n      content: '',\n    };\n\n    /**\n     * Returning observed Attributes\n     * @return {Array<string>}\n     */\n    static get observedAttributes(): string[] {\n      return ['width', 'orientation'];\n    }\n\n    /**\n     * Possible Orientations\n     * @return {Array<string>}\n     */\n    static get orientations(): string[] {\n      return ['right', 'left'];\n    }\n\n\n    /**\n     * Returning Menu Template\n     * @return {string}\n     */\n    static get menuTemplate() {\n      return `nav{\n                  position: fixed;\n                  top: 0;\n                  z-index: 100;\n                  height: 100%;\n                  padding: .5rem 1rem;\n                  box-shadow: 0 6px 12px rgba(107, 82, 82, 0.3);\n                  background-color: white;\n                  -webkit-box-sizing: border-box;\n                  -moz-box-sizing: border-box;\n                  box-sizing: border-box;\n                  transition: ease 0.2s all;\n              }\n                \n                #body-overlay {\n                  width: 100vw;\n                  height: 100vh;\n                  display: none;\n                  position: fixed;\n                  z-index: 3;\n                  top: 0;\n                  left:0;\n                  overflow: hidden;\n                  background: rgba(0, 0, 0, 0.5);\n                }`;\n    }\n\n    /**\n     * Default-Constructor\n     */\n    constructor() {\n      super();\n      this._properties.content = this.innerHTML;\n    }\n\n    /**\n     * Listining to Callback\n     */\n    connectedCallback() { // Lazy creation of shadowRoot.\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: 'open',\n        }).innerHTML = '';\n      }\n      this._updateRendering();\n      this._addListener();\n    }\n\n    /**\n     * PUBLIC\n     * Getter for Width of the Popup-Menu\n     * @return {string}\n     */\n    get width() {\n      return this._properties.width;\n    }\n\n    /**\n     * PUBLIC\n     * Setter for Widh of the Popup-Menu\n     * @param {string} val\n     */\n    set width(val) {\n      if (val !== this.width) {\n        this._properties.width = val;\n        this._updateRendering();\n      }\n    }\n\n    /**\n     * PUBLIC\n     * Getter for Orientation of the Popup-Menu\n     * @return {string}\n     */\n    get orientation() {\n      return this._properties.orientation;\n    }\n\n    /**\n     * PUBLIC\n     * Setter for Orientation of the Popup-Menu\n     * @param {string} val\n     */\n    set orientation(val) {\n      const included = VetproviehSidemenu.orientations.includes(val);\n      if (val !== this.orientation && included) {\n        this._properties.orientation = val;\n        this._updateRendering();\n      }\n    }\n\n    /**\n     * PUBLIC\n     * Menü öffnen/schließen\n     */\n    toggleMenu() {\n      if (this.shadowRoot) {\n        const menu = this.getByIdFromShadowRoot('menu') as HTMLElement;\n        if (!menu.classList.contains('open')) {\n          menu.classList.add('open');\n        } else {\n          menu.classList.remove('open');\n        }\n      }\n    }\n\n    /**\n     * PRIVATE\n     * Add EventListener to Component\n     */\n    _addListener() {\n      this.addEventListener('toggle', this.toggleMenu);\n      const element = this.getByIdFromShadowRoot('body-overlay') as HTMLElement;\n      element.addEventListener('click', () => this.toggleMenu());\n    }\n\n    /**\n     * PRIVATE\n     * Writing HTML-Output\n     */\n    _updateRendering() {\n      if (this.shadowRoot) {\n        this.shadowRoot.innerHTML = VetproviehElement.template + `\n                <style>\n                  ` + VetproviehSidemenu.menuTemplate + `\n            \n                  nav {\n                    width: ` + this.width + `;\n                    ` + this.orientation + `: -` + this.width + `;\n                  }\n            \n                  .open #body-overlay {\n                    display: block;\n                  }\n            \n                  .open nav{\n                    ` + this.orientation + `: 0;\n                  }\n                </style>\n                <div id=\"menu\">\n                    <div id=\"body-overlay\"></div>\n                    <nav role=\"navigation\">            \n                    ` + this._properties.content + `\n                    </nav>\n                </div>`;\n      }\n    }\n}\n\nwindow.customElements.define('vetprovieh-sidemenu', VetproviehSidemenu);\n"],"names":[],"mappings":"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"}